系统命名规范：
包名：全小写
类名：首字母大写（帕斯卡规则）
方法名&变量名：首字母小写（驼峰规则）
-------------------------------------------------
系统开发编写规则：
变量：声明局部变量与该变量使用行不得超过5行   起局部变量与使用地方不要超过5行
参数：若传递的参数量达到5个及以上，将参数实体化  传参数超过5个，变成实体变量
代码：若方法中同一系列操作达到50行，抽成方法体调用     方法超过50行就抽成方法调用

数据库初始化
-- --------------------------------------------------------
-- 主机:                           127.0.0.1
-- 服务器版本:                        5.5.62 - MySQL Community Server (GPL)
-- 服务器操作系统:                      Win64
-- HeidiSQL 版本:                  7.0.0.4363
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- 导出 center_manager 的数据库结构
CREATE DATABASE IF NOT EXISTS `center_manager` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `center_manager`;


-- 导出  表 center_manager.sys_file 结构
CREATE TABLE IF NOT EXISTS `sys_file` (
  `id` varchar(50) NOT NULL,
  `name` varchar(100) NOT NULL COMMENT '文件名',
  `path` varchar(100) NOT NULL COMMENT '存放磁盘路径',
  `type` varchar(100) NOT NULL COMMENT '文件类型',
  `code` varchar(100) NOT NULL COMMENT '文件编号',
  `url` varchar(100) NOT NULL COMMENT '访问路径',
  `date` varchar(100) NOT NULL COMMENT '上传日期',
  `ip` varchar(100) NOT NULL COMMENT '文件服务器ip',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='文件表';

-- 正在导出表  center_manager.sys_file 的数据：~0 rows (大约)
/*!40000 ALTER TABLE `sys_file` DISABLE KEYS */;
/*!40000 ALTER TABLE `sys_file` ENABLE KEYS */;


-- 导出  表 center_manager.sys_menu 结构
CREATE TABLE IF NOT EXISTS `sys_menu` (
  `id` varchar(50) NOT NULL,
  `name` varchar(50) DEFAULT NULL COMMENT '模块或菜单名',
  `url` varchar(500) DEFAULT NULL COMMENT '访问地址',
  `parent_id` varchar(50) DEFAULT NULL COMMENT '父级菜单id',
  `order_no` int(11) DEFAULT NULL COMMENT '序号',
  `type` char(50) DEFAULT NULL COMMENT '类型1代表一级菜单，2代表二级菜单',
  `img` varchar(50) DEFAULT NULL COMMENT '图片名',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='系统模块菜单表';

-- 正在导出表  center_manager.sys_menu 的数据：~4 rows (大约)
/*!40000 ALTER TABLE `sys_menu` DISABLE KEYS */;
INSERT INTO `sys_menu` (`id`, `name`, `url`, `parent_id`, `order_no`, `type`, `img`) VALUES
	('1', '系统管理', NULL, '00', NULL, '1', NULL),
	('2', '角色管理', 'role/list', '1', NULL, '2', NULL),
	('3', '菜单管理', 'menu/list', '1', NULL, '2', NULL),
	('4', '用户管理', 'user/list', '1', NULL, '2', NULL);
/*!40000 ALTER TABLE `sys_menu` ENABLE KEYS */;


-- 导出  表 center_manager.sys_role 结构
CREATE TABLE IF NOT EXISTS `sys_role` (
  `id` varchar(50) NOT NULL,
  `name` varchar(50) DEFAULT NULL COMMENT '角色名',
  `order_no` int(11) DEFAULT '0' COMMENT '角色序号',
  `state` char(2) DEFAULT '1' COMMENT '角色状态(0停用1启用)',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='框架角色表';

-- 正在导出表  center_manager.sys_role 的数据：~0 rows (大约)
/*!40000 ALTER TABLE `sys_role` DISABLE KEYS */;
INSERT INTO `sys_role` (`id`, `name`, `order_no`, `state`) VALUES
	('1', '系统管理员', 0, '1');
/*!40000 ALTER TABLE `sys_role` ENABLE KEYS */;


-- 导出  表 center_manager.sys_role_menu 结构
CREATE TABLE IF NOT EXISTS `sys_role_menu` (
  `id` varchar(50) NOT NULL,
  `role_id` varchar(50) DEFAULT NULL COMMENT '角色id',
  `menu_id` varchar(50) DEFAULT NULL COMMENT '菜单id',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='系统角色与模块菜单的关联';

-- 正在导出表  center_manager.sys_role_menu 的数据：~0 rows (大约)
/*!40000 ALTER TABLE `sys_role_menu` DISABLE KEYS */;
INSERT INTO `sys_role_menu` (`id`, `role_id`, `menu_id`) VALUES
	('1', '1', '1'),
	('2', '1', '2'),
	('3', '1', '3'),
	('4', '1', '4');
/*!40000 ALTER TABLE `sys_role_menu` ENABLE KEYS */;


-- 导出  表 center_manager.sys_user 结构
CREATE TABLE IF NOT EXISTS `sys_user` (
  `id` varchar(50) NOT NULL,
  `login_name` varchar(50) DEFAULT NULL COMMENT '登录名',
  `pwd` varchar(50) DEFAULT NULL COMMENT '密码',
  `name` varchar(50) DEFAULT NULL COMMENT '姓名',
  `active` varchar(50) DEFAULT NULL COMMENT '状态（0停用1启用）',
  `img` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `login_name` (`login_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='用户表';

-- 正在导出表  center_manager.sys_user 的数据：~1 rows (大约)
/*!40000 ALTER TABLE `sys_user` DISABLE KEYS */;
INSERT INTO `sys_user` (`id`, `login_name`, `pwd`, `name`, `active`, `img`) VALUES
	('1', 'admin', 'E10ADC3949BA59ABBE56E057F20F883E', 'admin', '1', NULL);
/*!40000 ALTER TABLE `sys_user` ENABLE KEYS */;


-- 导出  表 center_manager.sys_user_role 结构
CREATE TABLE IF NOT EXISTS `sys_user_role` (
  `id` varchar(50) NOT NULL,
  `role_id` varchar(50) DEFAULT NULL COMMENT '角色id',
  `user_id` varchar(50) DEFAULT NULL COMMENT '用户id',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='用户角色关联表';

-- 正在导出表  center_manager.sys_user_role 的数据：~0 rows (大约)
/*!40000 ALTER TABLE `sys_user_role` DISABLE KEYS */;
INSERT INTO `sys_user_role` (`id`, `role_id`, `user_id`) VALUES
	('1', '1', '1');
/*!40000 ALTER TABLE `sys_user_role` ENABLE KEYS */;


-- 导出  触发器 center_manager.trigger_delete_menu 结构
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `trigger_delete_menu` BEFORE DELETE ON `sys_menu` FOR EACH ROW BEGIN
delete from sys_role_menu where menu_id=old.id; 
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;


-- 导出  触发器 center_manager.trigger_delete_sysuser 结构
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `trigger_delete_sysuser` BEFORE DELETE ON `sys_user` FOR EACH ROW #系统用户删除时，级联删除其他表有关信息
BEGIN
delete from sys_user_role where user_id=old.id;
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;
/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
